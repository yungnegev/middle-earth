import { getRandom, nameByEffect } from './utils/utils.js';

// —Å–æ–∑–¥–∞—é –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂
// –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ —É–∫–∞–∑—ã–≤–∞—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–∏–º—è, —Ä–∞—Å–∞, —Å–∏–ª–∞, —Ç–æ—á–Ω–æ—Å—Ç—å, –±—Ä–æ–Ω—è, —Å–∫–æ—Ä–æ—Å—Ç—å)

class Character {
  constructor(name, race, strength, accuracy, armor, speed) {   
    this.name = name;               // –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –ª–æ–≥
    this.race = race;               // –¥–ª—è –∞–ª–∏—è—Å–∞
    this.strength = strength;       // —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ (—É—Ä–æ–Ω)
    this.accuracy = accuracy;       // –∫–∞–∫ —á–∞—Å—Ç–æ –ø–æ–ø–∞–¥–∞–µ—Ç 
    this.armor = armor;             // –±—Ä–æ–Ω—è (—è —Ä–µ—à–∏–ª —Å–¥–µ–ª–∞—Ç—å –∫–∞–∫ —É—Ä–æ–Ω, –Ω–æ –≤ –º–∏–Ω—É—Å–± –º–æ–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ—Ü–µ–Ω—Ç )
    this.speed = speed;             // –∏—Å–ø–æ–ª—å–∑—É—é –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —à–∞–Ω—Å–∞ —É–∫–ª–æ–Ω–µ–Ω–∏—è –∫–∞–∫ –ª–æ–≤–∫–æ—Å—Ç—å
    this.hp = 100;                  // —Ö–ø 100 —É –≤—Å–µ—Ö 
    this.armyId = null;             // –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –ª–æ–≥ –∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    this.id = null;                 
    this.army = [];
  }

  logAction(action) {               // –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –≤ –ª–æ–≥
    const logElement = document.getElementById('logList');
    const logItem = document.createElement('li');
    logItem.classList.add('log-item');
    logItem.innerHTML = action;
    logElement.prepend(logItem);
  }

  attack(target) {  // –º–µ—Ç–æ–¥ –∞—Ç–∞–∫–∏ (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ü–µ–ª—å)
    const damage = this.strength - target.armor; // —É—Ä–æ–Ω = —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ - –±—Ä–æ–Ω—è —Ü–µ–ª–∏

    // –≤—ã—á–∏—Å–ª—è—é —à–∞–Ω—Å —É–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—Ç–µ–º –∫–∏–¥–∞—é —Ä–∞–Ω–¥–æ–º –æ—Ç 1 –¥–æ 100 –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—é —Å —à–∞–Ω—Å–æ–º —É–∫–ª–æ–Ω–µ–Ω–∏—è
    const targetDodgeChance = target.speed * 2; 
    const accuracy = this.accuracy 
    const random = getRandom(1, 100)
    
    const totalDodgeChance = (accuracy - targetDodgeChance) * 2;

    const isDodgeSuccessful = random <= totalDodgeChance

    if (isDodgeSuccessful) {
      // –∫—Ä–∞—Å–∏–≤—ã–µ –ª–æ–≥–∏ –ø—Ä–∏ –ø–æ–º–æ—â–∏ —à–∞–±–ª–æ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
      this.logAction(`<span class="log-name">${target.name}</span>
                      <span class="log-id">[${target.id}]</span>
                      <span class="log-army">(${target.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
                      <span class="log-dodge">—É–≤–µ—Ä–Ω—É–ª—è</span> –æ—Ç –∞—Ç–∞–∫–∏ 
                      <span class="log-name">${nameByEffect('charm', this.name)}</span>
                      <span class="log-id">[${this.id}]</span>
                      <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
                      `);
      return; // –µ—Å–ª–∏ —É–∫–ª–æ–Ω–∏–ª—Å—è —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
    }

    target.hp -= damage; // –æ—Ç–Ω–∏–º–∞—é —É —Ü–µ–ª–∏ —Ö–ø

    if (target.hp <= 0) { 
      this.logAction(`<span class="log-name">${this.name}</span>
                      <span class="log-id">[${this.id}]</span>
                      <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
                      <span class="log-defeated">—É–±–∏–ª</span>
                      <span class="log-name">${nameByEffect('charm', target.name)}</span>
                      <span class="log-id">[${target.id}]</span>
                      <span class="log-army">(${target.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
      `);
    } else {
      this.logAction(`<span class="log-name">${this.name}</span>
            <span class="log-id">[${this.id}]</span>
            <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
            –Ω–∞–Ω–µ—Å <span class="log-damage">${damage}</span> —É—Ä–æ–Ω–∞
            <span class="log-name">${nameByEffect('damage', target.name)}</span>
            <span class="log-id">[${target.id}]</span>
            <span class="log-army">(${target.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
      `);
    }
  }
}

// —Å–æ–∑–¥–∞—é –∫–ª–∞—Å—Å—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–∞—Å–ª–µ–¥—É—è—Å—å –æ—Ç –∫–ª–∞—Å—Å–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂
export class HumanWarrior extends Character {
  constructor() {
    super('–ß–µ–ª–æ–≤–µ–∫ –í–æ–∏–Ω', 'human', 12, 8, 9, 2);         // –∑–¥–µ—Å—å —É–∫–∞–∑—ã–≤–∞—é —Å—Ç–∞—Ç—ã
    this.imgSrc = '/src/assets/images/humanWarrior.png'; // –¥–ª—è —Ñ–æ—Ç–æ
  }
}

export class HumanHorseman extends Character {
  constructor() {
    super('–ß–µ–ª–æ–≤–µ–∫ –í—Å–∞–¥–Ω–∏–∫', 'human', 16, 7, 7, 6);
    this.imgSrc = '/src/assets/images/humanHorseman.png';
  }
}

export class OrcHeavy extends Character {
  constructor() {
    super('–û—Ä–∫ –¢—è–∂–µ–ª–æ–≤–µ—Å', 'orc', 20, 6, 10, 1);
    this.imgSrc = '/src/assets/images/orcHeavy.png';
  }
}

export class OrcLight extends Character {
  constructor() {
    super('–û—Ä–∫ –õ–∞–∑—É—Ç—á–∏–∫', 'orc', 12, 9, 6, 4);
    this.imgSrc = '/src/assets/images/orcLight.png';
  }
}

export class Elf extends Character {
  constructor() {
    super('–≠–ª—å—Ñ', 'elf', 18, 10, 8, 6);
    this.imgSrc = '/src/assets/images/elf.png';
    this.arrows = 10;     // 10 —Å—Ç—Ä–µ–ª
    this.critChance = 20; // 20% —à–∞–Ω—Å –∫—Ä–∏—Ç–∞ (–≤—ã—Å—Ç—Ä–µ–ª–∞ –≤ –≥–ª–∞–∑)
  }

  attack(target) { // —ç–ª—å—Ñ—É –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—é –º–µ—Ç–æ–¥ –∞—Ç–∞–∫–∏
    const rng = getRandom(1, 100);
    const isCrit = rng < this.critChance; // –æ–ø—Ä–µ–¥–µ–ª—è—é –∫—Ä–∏—Ç –∏–ª–∏ –Ω–µ—Ç
    const baseDamage = this.strength - target.armor;
    const critDamage = 100;

    if (this.arrows > 0) { // –µ—Å–ª–∏ —Å—Ç—Ä–µ–ª—ã –µ—Å—Ç—å —Ç–æ —Å—Ç—Ä–µ–ª—è—é
      const damage = isCrit ? critDamage : baseDamage;  // –µ—Å–ª–∏ –∫—Ä–∏—Ç —Ç–æ —É—Ä–æ–Ω = 100 –∏–Ω–∞—á–µ —É—Ä–æ–Ω = —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ - –±—Ä–æ–Ω—è —Ü–µ–ª–∏
      target.hp -= damage;  

      this.arrows -= 1; // –æ—Ç–Ω–∏–º–∞—é —Å—Ç—Ä–µ–ª—É

      if (target.hp <= 0) {
        isCrit // –ª–æ–≥–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫—Ä–∏—Ç–∞
          ?       this.logAction(`<span class="log-name">${this.name}</span>
          <span class="log-id">[${this.id}]</span>
          <span class="log-arrows">(üèπ:${this.arrows})</span>
          <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
          <span class="log-defeated">—É–±–∏–ª</span> 
          <span class="log-name">${nameByEffect('charm', target.name)}</span>
          <span class="log-id">[${target.id}]</span>
          <span class="log-army">(${target.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
          <span class="log-crit">–≤—ã—Å—Ç—Ä–µ–ª–æ–º –≤ –≥–ª–∞–∑!</span>
          `)
          :       this.logAction(`<span class="log-name">${this.name}</span>
          <span class="log-id">[${this.id}]</span>
          <span class="log-arrows">(üèπ:${this.arrows})</span>
          <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
          <span class="log-defeated">—É–±–∏–ª</span>
          <span class="log-name">${nameByEffect('charm', target.name)}</span>
          <span class="log-id">[${target.id}]</span>
          <span class="log-army">(${target.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
          `);
      } else {
        this.logAction(`<span class="log-name">${this.name}</span>
                        <span class="log-id">[${this.id}]</span>
                        <span class="log-arrows">(üèπ:${this.arrows})</span>
                        <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
                        –Ω–∞–Ω–µ—Å <span class="log-damage">${damage}</span> —É—Ä–æ–Ω–∞
                        <span class="log-name">${nameByEffect('damage', target.name)}</span>
                        <span class="log-id">[${target.id}]</span>
                        <span class="log-army">(${target.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
        `);
      }
    }

    if (this.arrows === 0) { // –µ—Å–ª–∏ —Å—Ç—Ä–µ–ª –Ω–µ—Ç —Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥ –æ —Ç–æ–º —á—Ç–æ —Å—Ç—Ä–µ–ª –Ω–µ—Ç
      this.logAction(`<span class="log-name">${this.name}</span>
                      <span class="log-id">[${this.id}]</span>
                      <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
                      <span class="log-arrows">(üèπ:${this.arrows})</span> –æ—Å—Ç–∞–ª—Å—è –±–µ–∑ —Å—Ç—Ä–µ–ª :(
      `)
    }
  }
}

export class Wizard extends Character { // –≤–æ–ª—à–µ–±–Ω–∏–∫ —Å–∞–º—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å–Ω—ã–π —é–Ω–∏—Ç
  constructor() {
    super('–í–æ–ª—à–µ–±–Ω–∏–∫', 'wizard', 0, 10, 0, 2);
    this.imgSrc = '/src/assets/images/wizard.png';
  }

  charm(target) {
    const rng = getRandom(1, 100);
    const charmChance = this.accuracy

    const isCharmSuccessful = rng <= charmChance; // 10% —à–∞–Ω—Å —á–∞—Ä–º–∞ 

    if (isCharmSuccessful) {

      const myArmy = this.army;
      const targetArmy = target.army;

      const targetArmyIndex = targetArmy.indexOf(target); // –Ω–∞—Ö–æ–∂—É –∏–Ω–¥–µ–∫—Å —Ü–µ–ª–∏ –≤ –µ–µ –∞—Ä–º–∏–∏
      targetArmy.splice(targetArmyIndex, 1);              // —É–¥–∞–ª—è—é —Ü–µ–ª—å –∏–∑ –µ–µ –∞—Ä–º–∏–∏

      target.armyId = this.armyId;                        // –º–µ–Ω—è—é –∞–π–¥–∏ –∞—Ä–º–∏–∏ —Ü–µ–ª–∏ –Ω–∞ —Å–≤–æ—é
      target.army = myArmy;                               // –º–µ–Ω—è—é –∞—Ä–º–∏—é —Ü–µ–ª–∏ –Ω–∞ —Å–≤–æ—é
      target.id = 'üëª'                                    // –º–µ–Ω—è—é –∞–π–¥–∏ —Ü–µ–ª–∏ –Ω–∞ –ø—Ä–∏–∑—Ä–∞–∫–∞ (–ø—Ä–æ—Å—Ç–æ –¥–ª—è —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç–∏)

      myArmy.push(target);                                // –¥–æ–±–∞–≤–ª—è—é —Ü–µ–ª—å –≤ —Å–≤–æ—é –∞—Ä–º–∏—é
      // –ª–æ–≥ –æ —Ç–æ–º —á—Ç–æ —á–∞—Ä–º —É—Å–ø–µ—à–µ–Ω
      this.logAction(`<span class="log-name">${this.name}</span>
          <span class="log-id">[${this.id}]</span>
          <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
          <span class="log-charmed">–∑–∞—á–∞—Ä–æ–≤–∞–ª</span>
          <span class="log-name">${nameByEffect('charm', target.name)}</span>
          <span class="log-id">[${target.id}]</span>
          <span class="log-army">(${target.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>, —Ç–µ–ø–µ—Ä—å –æ–Ω –≤ –∞—Ä–º–∏–∏ 
          <span>(${this.armyId === 1 ? '–ó–∞–ø–∞–¥–∞' : '–í–æ—Å—Ç–æ–∫–∞'})</span>!
          `);
    } else { // –ª–æ–≥ –æ —Ç–æ–º —á—Ç–æ —á–∞—Ä–º –Ω–µ —É—Å–ø–µ—à–µ–Ω
      this.logAction(`<span class="log-name">${this.name}</span>
          <span class="log-id">[${this.id}]</span>
          <span class="log-army">(${this.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span>
          –ø–æ–ø—ã—Ç–∞–ª—Å—è –Ω–∞–ª–æ–∂–∏—Ç—å —á–∞—Ä—ã –Ω–∞ 
          <span class="log-name">${nameByEffect('charm', target.name)}</span>
          <span class="log-id">[${target.id}]</span>
          <span class="log-army">(${target.armyId === 1 ? '–ó–∞–ø–∞–¥' : '–í–æ—Å—Ç–æ–∫'})</span> , –Ω–æ –Ω–µ —Å–º–æ–≥ —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å!
      `);
    }
  }
}